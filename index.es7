import regeneratorRuntime from "regenerator-runtime";
import puppeteer from 'puppeteer';
import fs from 'fs';
import gapi from '../lib/gapi';


// Load client secrets from a local file.
fs.readFile('client_secret.json', function processClientSecrets(err, content) {
  if (err) {
    console.log('Error loading client secret file: ' + err);
    return;
  }

  let json_data = JSON.parse(content);
  gapi(json_data, '1xSs2wdYCVAMbUTO2OjM5l24a0hs9uejpguWo-tYVFpU', 'Github!A1:B2', (err, response) => {
    if (err) {
      console.log('The API returned an error: ' + err);
      return;
    }
    var rows = response.values;
    if (rows.length == 0) {
      console.log('No data found.');
    } else {
      for (var i = 0; i < rows.length; i++) {
        var row = rows[i];
        // Print columns A and E, which correspond to indices 0 and 4.
        console.log('%s, %s', row[0], row[1]);
      }
    }
  });
});


// (async () => {
// 	const browser = await puppeteer.launch({headless: false});
// 	const page = await browser.newPage();

// 	await page.setViewport({width: 1280, height: 800});
// 	await page.setUserAgent('Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36');

// 	await page.goto('https://github.com/login');

// 	await page.focus('#login_field');
// 	await page.type('supertom_007@yahoo.com');

// 	await page.focus('#password');
// 	await page.type('@sdf1234');

// 	// Submit form
// 	await page.click('input[value="Sign in"]');

// 	// Wait for search results page to load
// 	await page.waitForNavigation({waitUntil: 'load'});

// 	await page.screenshot({path: 'example.png'});

// 	await browser.close();
// })();

